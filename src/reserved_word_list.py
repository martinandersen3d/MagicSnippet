def get_reserved_words(file_extension = ""):
    ext =  file_extension.lower()
    if 'cs' == ext :
        return [
            "abstract",
            "as",
            "base",
            "bool",
            "break",
            "byte",
            "case",
            "catch",
            "char",
            "checked",
            "class",
            "const",
            "continue",
            "decimal",
            "default",
            "delegate",
            "do",
            "double",
            "else",
            "enum",
            "event",
            "explicit",
            "extern",
            "false",
            "finally",
            "fixed",
            "float",
            "for",
            "foreach",
            "goto",
            "if",
            "implicit",
            "in",
            "int",
            "interface",
            "internal",
            "is",
            "List",
            "lock",
            "long",
            "namespace",
            "new",
            "null",
            "object",
            "operator",
            "out",
            "override",
            "params",
            "private",
            "protected",
            "public",
            "readonly",
            "ref",
            "return",
            "sbyte",
            "sealed",
            "short",
            "sizeof",
            "stackalloc",
            "static",
            "string",
            "struct",
            "switch",
            "this",
            "Task",
            "throw",
            "true",
            "try",
            "typeof",
            "uint",
            "ulong",
            "unchecked",
            "unsafe",
            "ushort",
            "using",
            "var",
            "virtual",
            "void",
            "volatile",
            "while",
            
            # xUnit.NET
            "Fact",
            "Theory",
            "InlineData",
            "SetUp",
            "TearDown",
            "Collection",
            "Trait",
            
            # MSTest
            "TestMethod",
            "TestClass",
            "ClassInitialize",
            "ClassCleanup",
            "TestInitialize",
            "TestCleanup",
            "TestCategory",
            
            # NUnit
            "Test",
            "TestFixture",
            "SetUp",
            "TearDown",
            "OneTimeSetUp",
            "OneTimeTearDown",
            "Category"
            
        ]
    # if 'css' == ext :
    #     return [
    #         'px', 'em', 'rem', 'vh', 'vw', 'vmin', 'vmax', '%', 'pt', 'pc', 'cm', 'mm', 'in',
    #         'ex', 'ch', 'rem', 'fr', 'deg', 'rad', 'turn' ,
    #         'align-content', 'align-items', 'align-self', 'all', 'animation', 'animation-delay', 
    #         'animation-direction', 'animation-duration', 'animation-fill-mode', 'animation-iteration-count', 
    #         'animation-name', 'animation-play-state', 'animation-timing-function', 'backface-visibility', 
    #         'background', 'background-attachment', 'background-blend-mode', 'background-clip', 'background-color', 
    #         'background-image', 'background-origin', 'background-position', 'background-repeat', 'background-size', 
    #         'border-bottom', 'border-bottom-color', 'border-bottom-left-radius', 'border-bottom-right-radius', 
    #         'border-bottom-style', 'border-bottom-width', 'border-collapse', 'border-color', 'border-image', 
    #         'border-image-outset', 'border-image-repeat', 'border-image-slice', 'border-image-source', 'border-image-width', 
    #         'border-left', 'border-left-color', 'border-left-style', 'border-left-width', 'border-radius', 
    #         'border-right', 'border-right-color', 'border-right-style', 'border-right-width', 'border-spacing', 
    #         'border-style', 'border-top', 'border-top-color', 'border-top-left-radius', 'border-top-right-radius', 
    #         'border-top-style', 'border-top-width', 'border-width', 'bottom', 'box-shadow', 'box-sizing', 'break-after', 'border',
    #         'break-before', 'break-inside', 'caption-side', 'clear', 'clip', 'color', 'column-count', 'column-fill', 
    #         'column-gap', 'column-rule', 'column-rule-color', 'column-rule-style', 'column-rule-width', 'column-span', 
    #         'column-width', 'columns', 'content', 'counter-increment', 'counter-reset', 'cursor', 'direction', 
    #         'display', 'empty-cells', 'filter', 'flex-basis', 'flex-direction', 'flex-flow', 'flex-grow', 
    #         'flex-shrink', 'flex-wrap', 'flex', 'float', 'font-family', 'font-size', 'font-size-adjust', 'font-stretch', 
    #         'font-style', 'font-variant', 'font-weight', 'font', 'gap', 'grid', 'grid-area', 'grid-auto-columns', 
    #         'grid-auto-flow', 'grid-auto-rows', 'grid-column', 'grid-column-end', 'grid-column-gap', 'grid-column-start', 
    #         'grid-gap', 'grid-row', 'grid-row-end', 'grid-row-gap', 'grid-row-start', 'grid-template', 'grid-template-areas', 
    #         'grid-template-columns', 'grid-template-rows', 'height', 'hyphens', 'image-rendering', '!important', 'isolation', 'justify-content', 
    #         'left', 'letter-spacing', 'line-height', 'list-style', 'list-style-image', 'list-style-position', 'list-style-type', 
    #         'margin-bottom', 'margin-left', 'margin-right', 'margin-top', 'margin', 'max-height', 'max-width', 'min-height', 
    #         'min-width', 'mix-blend-mode', 'object-fit', 'object-position', 'opacity', 'order', 'orphans', 'outline', 
    #         'outline-color', 'outline-offset', 'outline-style', 'outline-width', 'overflow', 'overflow-wrap', 'overflow-x', 
    #         'overflow-y', 'padding', 'padding-bottom', 'padding-left', 'padding-right', 'padding-top', 'page-break-after', 
    #         'page-break-before', 'page-break-inside', 'perspective', 'perspective-origin', 'position', 'quotes', 'resize', 
    #         'right', 'scroll-behavior','size', 'tab-size', 'table-layout', 'text-align', 'text-align-last', 'text-decoration', 
    #         'text-decoration-color', 'text-decoration-line', 'text-decoration-style', 'text-indent', 'text-justify', 
    #         'text-overflow', 'text-shadow', 'text-transform', 'top', 'transform', 'transform-origin', 'transform-style', 
    #         'transition', 'transition-delay', 'transition-duration', 'transition-property', 'transition-timing-function', 
    #         'unicode-bidi', 'vertical-align', 'visibility', 'white-space', 'widows', 'width', 'will-change', 
    #         'word-break', 'word-spacing', 'word-wrap', 'writing-mode', 'z-index'
              
    #     ]        
    if 'js' == ext :
        return [
            'abstract',
            'await',
            'boolean',
            'break',
            'byte',
            'case',
            'catch',
            'char',
            'class',
            'const',
            'continue',
            'debugger',
            'default',
            'delete',
            'do',
            'double',
            'else',
            'enum',
            'export',
            'extends',
            'false',
            'final',
            'finally',
            'float',
            'for',
            'function',
            'goto',
            'if',
            'implements',
            'import',
            'in',
            'instanceof',
            'int',
            'interface',
            'let',
            'long',
            'native',
            'new',
            'null',
            'package',
            'private',
            'protected',
            'public',
            'return',
            'short',
            'static',
            'super',
            'switch',
            'synchronized',
            'this',
            'throw',
            'throws',
            'transient',
            'true',
            'try',
            'typeof',
            'var',
            'void',
            'volatile',
            'while',
            'with',
            'yield'
        ]
    if 'json' == ext :
        return [
            'true',
            'false'
        ]
    if 'ts' == ext :
        return [
            'abstract',
            'any',
            'as',
            'boolean',
            'break',
            'case',
            'catch',
            'class',
            'const',
            'continue',
            'debugger',
            'declare',
            'default',
            'delete',
            'do',
            'else',
            'enum',
            'export',
            'extends',
            'false',
            'finally',
            'for',
            'from',
            'function',
            'get',
            'if',
            'implements',
            'import',
            'in',
            'instanceof',
            'interface',
            'let',
            'module',
            'namespace',
            'new',
            'null',
            'number',
            'object',
            'package',
            'private',
            'protected',
            'public',
            'readonly',
            'require',
            'return',
            'set',
            'static',
            'super',
            'switch',
            'symbol',
            'this',
            'throw',
            'true',
            'try',
            'type',
            'typeof',
            'undefined',
            'var',
            'void',
            'while',
            'with',
            'yield'
        ]
    if 'py' == ext :
        return [
            'False', 'None', 'True', 'and', 'as', 'assert', 'async', 'await', 'break', 
            'class', 'continue', 'def', 'del', 'elif', 'else', 'except', 'finally', 
            'for', 'from', 'global', 'if', 'import', 'in', 'is', 'lambda', 'nonlocal', 
            'not', 'or', 'pass', 'raise', 'return', 'try', 'while', 'with', 'yield'
        ]
    if 'html' == ext :
        return [
              "a",
            "abbr",
            "acronym",
            "address",
            "applet",
            "area",
            "article",
            "aside",
            "audio",
            "b",
            "base",
            "basefont",
            "bdi",
            "bdo",
            "big",
            "blink",
            "blockquote",
            "body",
            "br",
            "button",
            "canvas",
            "caption",
            "center",
            "cite",
            "code",
            "col",
            "colgroup",
            "data",
            "datalist",
            "dd",
            "del",
            "details",
            "dfn",
            "dialog",
            "dir",
            "div",
            "dl",
            "dt",
            "element",
            "em",
            "embed",
            "fieldset",
            "figcaption",
            "figure",
            "font",
            "footer",
            "form",
            "frame",
            "frameset",
            "h1",
            "h2",
            "h3",
            "h4",
            "h5",
            "h6",
            "head",
            "header",
            "hgroup",
            "hr",
            "html",
            "i",
            "iframe",
            "image",
            "img",
            "input",
            "ins",
            "isindex",
            "kbd",
            "keygen",
            "label",
            "legend",
            "li",
            "link",
            "listing",
            "main",
            "map",
            "mark",
            "marquee",
            "menu",
            "meta",
            "meter",
            "nav",
            "nobr",
            "noframes",
            "noscript",
            "object",
            "ol",
            "optgroup",
            "option",
            "output",
            "p",
            "param",
            "picture",
            "plaintext",
            "pre",
            "progress",
            "q",
            "rp",
            "rt",
            "ruby",
            "s",
            "samp",
            "script",
            "section",
            "select",
            "shadow",
            "slot",
            "small",
            "source",
            "spacer",
            "span",
            "strike",
            "strong",
            "style",
            "sub",
            "summary",
            "sup",
            "svg",
            "table",
            "tbody",
            "td",
            "template",
            "textarea",
            "tfoot",
            "th",
            "thead",
            "time",
            "title",
            "tr",
            "track",
            "tt",
            "u",
            "ul",
            "var",
            "video",
            "wbr"
        ]
    if 'ps1' == ext :
        return [
            "begin",
            "break",
            "catch",
            "class",
            "continue",
            "data",
            "define",
            "do",
            "dynamicparam",
            "else",
            "elseif",
            "end",
            "enum",
            "exit",
            "filter",
            "finally",
            "for",
            "foreach",
            "from",
            "function",
            "if",
            "in",
            "param",
            "process",
            "return",
            "switch",
            "throw",
            "trap",
            "try",
            "until",
            "using",
            "var",
            "while",
            "workflow",
            "write"
        ]
    if 'sh' == ext :
        return [
              "case"
                "do"
                "done"
                "elif"
                "else"
                "esac"
                "fi"
                "for"
                "function"
                "if"
                "in"
                "select"
                "then"
                "until"
                "while"
        ]
    if 'sql' == ext :
        return [
        'ADD', 'ALL', 'ALTER', 'AND', 'AS', 'ASC', 'BETWEEN', 'BY', 'CASE', 'CHECK', 'COLUMN', 
        'CONSTRAINT', 'CREATE', 'DATABASE', 'DEFAULT', 'DELETE', 'DESC', 'DISTINCT', 'DROP', 
        'ELSE', 'END', 'ESCAPE', 'EXCEPT', 'EXISTS', 'FOREIGN', 'FROM', 'FULL', 'GROUP', 'HAVING', 
        'IN', 'INDEX', 'INNER', 'INSERT', 'INTO', 'IS', 'JOIN', 'LEFT', 'LIKE', 'LIMIT', 'NOT', 
        'NULL', 'ON', 'OR', 'ORDER', 'OUTER', 'PRIMARY', 'REFERENCES', 'RIGHT', 'SELECT', 'SET', 
        'TABLE', 'TOP', 'TRUNCATE', 'UNION', 'UNIQUE', 'UPDATE', 'VALUES', 'VIEW', 'WHERE',
        'add', 'all', 'alter', 'and', 'as', 'asc', 'between', 'by', 'case', 'check', 'column', 
        'constraint', 'create', 'database', 'default', 'delete', 'desc', 'distinct', 'drop', 
        'else', 'end', 'escape', 'except', 'exists', 'foreign', 'from', 'full', 'group', 'having', 
        'in', 'index', 'inner', 'insert', 'into', 'is', 'join', 'left', 'like', 'limit', 'not', 
        'null', 'on', 'or', 'order', 'outer', 'primary', 'references', 'right', 'select', 'set', 
        'table', 'top', 'truncate', 'union', 'unique', 'update', 'values', 'view', 'where',
        'Add','All','Alter','And','As','Asc','Between','By','Case','Check','Column','Constraint',
        'Create','Database','Default','Delete','Desc','Distinct','Drop','Else','End','Escape',
        'Except','Exists','Foreign','From','Full','Group','Having','In','Index','Inner','Insert',
        'Into','Is','Join','Left','Like','Limit','Not','Null','On','Or','Order','Outer','Primary',
        'References','Right','Select','Set','Table','Top','Truncate','Union','Unique','Update',
        'Values','View','Where', 'GO', 'Go', 'go'
        ]

    # If no language is defined, then return a basic list of common reserved words from programming languages
    return [
    "abstract", "assert", "boolean", "break", "byte", "case", "catch", "char", "class", "const",
    "continue", "default", "do", "double", "else", "enum", "extends", "false", "final", "finally",
    "float", "for", "function", "goto", "if", "implements", "import", "instanceof", "int",
    "interface", "let", "long", "native", "new", "null", "package", "private", "protected",
    "public", "return", "short", "static", "String", "super", "switch", "synchronized", "this", "throw",
    "throws", "transient", "true", "try", "typeof", "var", "void", "volatile", "while", "with",
    ]
    

       